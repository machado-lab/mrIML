select(BOVINO_TOT)%>%
filter(BOVINO_TOT == 0)
plot.mov <- gtac %>%
ggplot() +
geom_line(aes(DATA_EMISSAO, BOVINO_TOT))+
#scale_x_date(date_breaks = "1 month")+
theme(axis.text.x=element_text(angle=90,hjust=1))
plot.mov
names(gtac)
zero.mov <- gtac %>%
select(BOVINO_TOT)%>%
filter(BOVINO_TOT == 0)
#################################################################################
## by farm  EDSON----
entra<-gtac %>%
filter(COD_PROPRIEDADE_ORIGEM=="43116001335")%>%
select(BOVINO_TOT,DATA_EMISSAO)%>%
# mutate(Animal_in=BOVINO_TOT,gta_emitidain=DATA_EMISSAO)%>%
# select(-BOVINO_TOT,-DATA_EMISSAO)%>%
group_by(DATA_EMISSAO)%>%
summarise(Frequency = sum(BOVINO_TOT))%>%
mutate(id="entra")
sai<-gtac %>%
filter(COD_PROPRIEDADE_DESTINO=="43116001335")%>%
select(BOVINO_TOT,DATA_EMISSAO)%>%
# mutate(Animal_in=BOVINO_TOT,gta_emitidain=DATA_EMISSAO)%>%
# select(-BOVINO_TOT,-DATA_EMISSAO)%>%
group_by(DATA_EMISSAO)%>%
summarise(Frequency = sum(BOVINO_TOT))%>%
mutate(id="sai")
pop1<-pop %>%
filter(COD_PROPRIEDADE_RURAL=="43116001335")%>%
select(QTD_DECLARADA,DATA_DECLARACAO)%>%
mutate(DATA_EMISSAO=DATA_DECLARACAO,BOVINO_TOT=QTD_DECLARADA)%>%
drop_na()%>%
group_by(DATA_EMISSAO)%>%
summarise(Frequency = sum(BOVINO_TOT))%>%
mutate(id="pop declarada")
data<-rbind(entra,sai,pop1)%>%
mutate(Tipo_movimento=id, total_bovinos=Frequency)
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
# Table of destination---
gtac %>%
filter(COD_PROPRIEDADE_DESTINO=="43116001335")%>%
select(BOVINO_TOT,DATA_EMISSAO,BOVINO_TOT,FINALIDADE)%>%
gt()%>%
data_color( # Update cell colors...
columns = vars(BOVINO_TOT), # ...for Mass column
colors = scales::col_numeric( # <- bc it's numeric
palette = viridis_pal(option = "plasma")(6),
domain = c(1,max(BOVINO_TOT)) # Column scale endpoints
)
)%>%tab_header(
title = md("EDSON como destino")
)
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(breaks=quantiles)
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(breaks=quantiles)+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(breaks=total_bovinos)+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(breaks=total_bovinos)+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
quantiles <- quantile(data$total_bovinos, prob=probs)
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(breaks=quantiles)+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
quantiles <- quantile(data$total_bovinos, prob=probs)
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(breaks=quantiles)+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
quantiles <- quantile(data$total_bovinos, prob=probs)
probs <- c(0, 0.25, 0.5, 0.75, 1)
quantiles <- quantile(data$total_bovinos, prob=probs)
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(breaks=quantiles)+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
quantiles <- quantile(data$total_bovinos)
quantiles
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
expand_limits(y=0) +
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(limits=c(0,70),expand = c(0,0), breaks=trans(yticks), labels=yticks) +
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
scale_y_continuous(limits=c(0,70),expand = c(0,0)+
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(limits=c(0,70)),expand = c(0,0)+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(limits=c(0,70)),expand = c(0,0)+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(limits=c(0,70))+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(limits=c(0,70,3))+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(limits=c(0,70,3))+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(breaks = seq(0, 100, by = 10))
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(breaks = seq(0, 100, by = 10))+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
data%>%
ggplot(aes(x=DATA_EMISSAO, y=total_bovinos, color=Tipo_movimento )) +
geom_line(aes(DATA_EMISSAO, total_bovinos ))+
geom_point(aes(DATA_EMISSAO, total_bovinos ))+
scale_x_date(date_breaks = "1 month")+
labs(x="", y="Total de bovinos")+
scale_y_continuous(breaks = seq(0, 100, by = 5))+
theme(text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 12))+
theme(axis.text.x=element_text(angle=45,hjust=1))
# Table of destination---
gtac %>%
filter(COD_PROPRIEDADE_DESTINO=="43116001335")%>%
select(BOVINO_TOT,DATA_EMISSAO,BOVINO_TOT,FINALIDADE)%>%
gt()%>%
data_color( # Update cell colors...
columns = vars(BOVINO_TOT), # ...for Mass column
colors = scales::col_numeric( # <- bc it's numeric
palette = viridis_pal(option = "plasma")(6),
domain = c(1,max(BOVINO_TOT)) # Column scale endpoints
)
)%>%tab_header(
title = md("EDSON como destino")
)
# Table of origin
gtac %>%
filter(COD_PROPRIEDADE_ORIGEM=="43116001335")%>%
select(BOVINO_TOT,DATA_EMISSAO,BOVINO_TOT,FINALIDADE)%>%
gt()%>%
data_color( # Update cell colors...
columns = vars(BOVINO_TOT), # ...for Mass column
colors = scales::col_numeric( # <- bc it's numeric
palette = viridis_pal(option = "plasma")(6),
domain = c(1,max(BOVINO_TOT)) # Column scale endpoints
)
)%>%tab_header(
title = md("EDSON como origem")
)
data
gta_EDSON<-gta %>%
filter(gta$COD_PROPRIEDADE_ORIGEM %in% 43116001335|gta$COD_PROPRIEDADE_DESTINO %in% 43116001335)%>%
select (COD_PROPRIEDADE_DESTINO,FINALIDADE,COD_PROPRIEDADE_ORIGEM,BOVINO_TOT,DATA_EMISSAO)%>%
as.data.frame()
ggplot(as.data.frame(gta_EDSON),
aes(y = BOVINO_TOT,
axis1 = COD_PROPRIEDADE_ORIGEM, axis2 = FINALIDADE, axis3 = COD_PROPRIEDADE_DESTINO)) +
geom_alluvium(aes(fill = BOVINO_TOT),
width = 0, knot.pos = 0, reverse = FALSE) +
guides(fill = FALSE) +
geom_stratum(width = 1/8, reverse = FALSE) +
geom_text(stat = "stratum", aes(label = after_stat(stratum)),
reverse = FALSE) +
scale_x_continuous(breaks = 1:3, labels = c("COD_PROPRIEDADE_ORIGEM", "FINALIDADE", "COD_PROPRIEDADE_DESTINO"))
## connection logical origin ----
gta_EDSONo<-gta %>%
filter(gta$COD_PROPRIEDADE_ORIGEM %in% 43116001335)%>%
select (COD_PROPRIEDADE_DESTINO,FINALIDADE,COD_PROPRIEDADE_ORIGEM,BOVINO_TOT)%>%
as.data.frame()
ggplot(as.data.frame(gta_EDSONo),
aes(y = BOVINO_TOT,
axis1 = COD_PROPRIEDADE_ORIGEM, axis2 = FINALIDADE, axis3 = COD_PROPRIEDADE_DESTINO)) +
geom_alluvium(aes(fill = BOVINO_TOT),
width = 0, knot.pos = 0, reverse = FALSE) +
guides(fill = FALSE) +
geom_stratum(width = 1/8, reverse = FALSE) +
geom_text(stat = "stratum", aes(label = after_stat(stratum)),
reverse = FALSE) +
scale_x_continuous(breaks = 1:3, labels = c("COD_PROPRIEDADE_ORIGEM", "FINALIDADE", "COD_PROPRIEDADE_DESTINO"))
### contact tracing
pop1<-pop%>%
rename(COD=COD_PROPRIEDADE_RURAL)
gta1<-gta%>%
rename(COD=COD_PROPRIEDADE_ORIGEM)
gta1<-gta1%>%
left_join(pop1,by ="COD")
####
summary(gta$COD_PROPRIEDADE_ORIGEM)
## filter usable data----
gta$DATA_EMISSAO <- as.Date(gta$DATA_EMISSAO)
gtac <- gta %>%
select(FINALIDADE,
LANCAMENTO,
DATA_EMISSAO,
LATITUDE_DEC_ORIGEM,
LONGITUDE_DEC_ORIGEM,
COD_PROPRIEDADE_ORIGEM,
COD_PROPRIEDADE_DESTINO,
COD_MUN_IBGE_ORIGEM,
MUNICIPIO_ORIGEM,
COD_MUN_IBGE_DESTINO,
UF_ORIGEM,
UF_DESTINO,
BOVINO_TOT,
COORD_REGIONAL_ORIGEM,
COORD_REGIONAL_DESTINO) %>%
#filter(UF_ORIGEM == "RS" & UF_DESTINO == "RS" ) %>%
filter(COD_PROPRIEDADE_ORIGEM != COD_PROPRIEDADE_DESTINO) %>%
drop_na(COD_PROPRIEDADE_ORIGEM,COD_PROPRIEDADE_DESTINO )
banco_trace <- gtac %>%
select(COD_PROPRIEDADE_ORIGEM,
COD_PROPRIEDADE_DESTINO,
DATA_EMISSAO ) %>%
rename(source = COD_PROPRIEDADE_ORIGEM,
destination = COD_PROPRIEDADE_DESTINO,
t = DATA_EMISSAO ) %>% drop_na() %>%
as.data.frame() %>%
filter(source != destination)
banco_trace$source <- as.factor(banco_trace$source)#make the source and destination into integers
banco_trace$destination <- as.factor(banco_trace$destination)
##############################################################################
#trace premises 43116001335 (EDSON ELOI BOSING)
trace1EDSON <- Trace(movements=banco_trace,
root= "43116001335", #11
inBegin="01-01-20",
inEnd="31-10-20",
outBegin="01-01-20",
outEnd="31-10-20")
plot(trace1EDSON)
NetworkStructure(trace1EDSON)
trace1EDSONtable<-NetworkStructure(trace1EDSON)
trace1a<-trace1EDSONtable %>%
# filter(direction=="in")%>%
filter(destination=="43393000715"|destination=="43116001348"|destination=="43116002630"|destination=="43152000540")%>%
select(destination,source,distance,direction)%>%
filter(distance<5)
alluvial_wide( data = trace1a
, fill_by = 'last_variable' )
alluvial_long( trace1a,
key = distance,
value = direction,
id = source,
fill = destination,
fill_by = 'last_variable' )
trace1EDSONtable%>%
filter(trace1EDSONtable$destination %in% 43116001335)%>%
gt()
trace1EDSONtable%>%
filter(trace1EDSONtable$source %in% 43116001335)%>%
gt()
## network -----
gta_EDSON$COD_PROPRIEDADE_ORIGEM<-as.factor(gta_EDSON$COD_PROPRIEDADE_ORIGEM)
gta_EDSON$COD_PROPRIEDADE_DESTINO<-as.factor(gta_EDSON$COD_PROPRIEDADE_DESTINO)
gta_EDSON$DATA_EMISSA<-as.factor(gta_EDSON$DATA_EMISSA)
gta_EDSONrede<-gta_EDSON%>%
select(COD_PROPRIEDADE_ORIGEM,COD_PROPRIEDADE_DESTINO)
net1 = network(gta_EDSONrede, directed = TRUE, matrix.type = "edgelist")
ggnet2(net1)$data
## network -----
gta_EDSON$COD_PROPRIEDADE_ORIGEM<-as.factor(gta_EDSON$COD_PROPRIEDADE_ORIGEM)
gta_EDSON$COD_PROPRIEDADE_DESTINO<-as.factor(gta_EDSON$COD_PROPRIEDADE_DESTINO)
gta_EDSON$DATA_EMISSA<-as.factor(gta_EDSON$DATA_EMISSA)
gta_EDSONrede<-gta_EDSON%>%
select(COD_PROPRIEDADE_ORIGEM,COD_PROPRIEDADE_DESTINO)
net1 = network(gta_EDSONrede, directed = TRUE, matrix.type = "edgelist")
net1 = network::network(gta_EDSONrede, directed = TRUE, matrix.type = "edgelist")
ggnet2(net1)$data
?ggnet2
??ggnet2
GGally::ggnet2(net1)$data
set.vertex.attribute(net1, 'date', as.character(gta_EDSON$DATA_EMISSA))
set.vertex.attribute(net1, 'total', as.character(gta_EDSON$BOVINO_TOT))
library(pkgdown)
pkgdown::build_site()
devtools::install_github('nfj1380/mrIML')
#load packages. Reduce this list.
library(vip)
#library(VIM)
#library(imputeTS)
#library(fastshap)
library(tidymodels)
library(pdp)
library(randomForest)
library(caret)
#library(pROC)
#library(ROCR)
library(missForest)
library(gbm)
#library(iml)
library(tidyverse)
#library(parallel)
library(doParallel)
library(themis)
library(viridis)
library(janitor)
library(hrbrthemes)
library(MRFcov)
library(xgboost)
library(vegan)
library(ggrepel)
library(LEA)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("LEA")
library(LEA)
#BiocManager::install("LEA")
library(ape)
library(flashlight)
library(devtools)
install_github("mayer79/flashlight")
install_github("mayer79/flashlight")
devtools::install_github('nfj1380/mrIML')
detach("package:flashlight", unload = TRUE)
library(flashlight)
devtools::install_github('nfj1380/mrIML', force=T)
#load packages. Reduce this list.
library(vip)
#library(VIM)
#library(imputeTS)
#library(fastshap)
library(tidymodels)
library(pdp)
library(randomForest)
library(caret)
#library(pROC)
#library(ROCR)
library(missForest)
library(gbm)
#library(iml)
library(tidyverse)
#library(parallel)
library(doParallel)
library(themis)
library(viridis)
library(janitor)
library(hrbrthemes)
library(MRFcov)
library(xgboost)
library(vegan)
library(ggrepel)
library(LEA)
#BiocManager::install("LEA")
library(ape)
library(flashlight)
library(devtools)
# load all function codes. This will disappear when we formally make this a function
source("./R/filterRareCommon.R")
source("./R/MrIMLpredicts.R")
source("./R/StackPredictions.R")
source("./R/devianceResids.R")
source("./R/filterRareCommon.R")
source("./R/MrIMLperformance.R")
source("./R/mrvip.R")
source("./R/plot_vi.R")
#new interaction code
source("./R/mrInteractions.R")
source("./R/mrPlotInteractions.R") #not finding this for some reason - no idea why
source("./R/vintTidy.R")
#Nick C - this and the function below are the functions with tidy model code I made from your original
source("./R/stacked_preds.R") #this does the stacking
source("./R/response_covariance") #this should create the covatiance matrix #not working?
source("./R/readSnpsPed.R") #function for reading SNP data from plink .ped file
source("./R/ResistanceComponents.R") #function for generating resistance component data from resistance matrices
source(("./R/mrFlashlight.R"))
source("./R/mrProfileplots.R")
pkgdown::build_site()
devtools::install_github('nfj1380/mrIML')
devtools::install_github('nfj1380/mrIML',force = TRUE)
install.packages("C:/Users/gmachad/Downloads/mrIML-master.zip", repos = NULL, type = "win.binary")
devtools::install_github('nfj1380/mrIML')
library(mlr)
devtools::install_github('nfj1380/mrIML')
remove.packages("flashlight", lib="~/R/win-library/3.6")
install.packages("flashlight")
devtools::install_github('nfj1380/mrIML')
library(flashlight)
remove.packages("flashlight", lib="~/R/win-library/3.6")
devtools::install_github('nfj1380/mrIML')
install_github("mayer79/flashlight", subdir = "release/flashlight")
library(devtools)
library(devtools)
install_github("mayer79/flashlight", subdir = "release/flashlight")
install_github("mayer79/flashlight", subdir = "release/flashlight")
install.packages("rlang")
install_github("mayer79/flashlight", subdir = "release/flashlight")
library(devtools)
install.packages("usethis")
library(devtools)
remove.packages("devtools", lib="~/R/win-library/3.6")
install.packages("devtools")
library(devtools)
install.packages("usethis")
install.packages("rlang")
getwd()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
